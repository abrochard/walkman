* Notes
  #+begin_src emacs-lisp
    (setq my-http-status "400")

    (defun my-body ()
      "return plain text body"
      "some body")

    (my-body)
  #+end_src


* POST with body
  POST https://httpbin.org/post
  - Accept: application/json
  - Content-Type: application/json
  #+begin_src json
    {
      "data": {
        "title": "Hello",
        "hello": "world"
      }
    }
  #+end_src

* No body
  GET https://httpbin.org/get

* Bad delete
  DELETE https://httpbin.org/status/400

* Embedded lisp variable
  GET https://httpbin.org/status/`my-http-status`

* Embedded lisp function
  PUT https://httpbin.org/put
  #+begin_src text
    `(my-body)`
  #+end_src

* Request with callbacks
  POST https://httpbin.org/post
  #+begin_src json
    {
      "some": "body"
    }
  #+end_src
  1. First callback
     #+begin_src emacs-lisp
       (lambda (status headers body)
         (message "status %s, headers %s, body %s" status headers body))
     #+end_src
  2. Second callback
     #+begin_src emacs-lisp
       (lambda (status headers body)
         (pp (assoc 'url (json-read-from-string body))))
     #+end_src

* Multi part
  POST https://httpbin.org/post
  - Accept: application/json
  :FORM:
  - type: document
  - file: [[/home/username/sample_document.jpg]]
  :END:

* Request Title
  GET/POST/PUT/... URL
  - Header1: value
  - Header2: value
  #+begin_src
    {
      "body": "in any mode/format"
    }
  #+end_src
  1. First Callback
     #+begin_src emacs-lisp
       (lambda (status headers body)
         (message "status %s, headers %s, body %s" status headers body))
     #+end_src
  2. Second Callback
     #+begin_src emacs-lisp
       (lambda (status headers body)
         (message "Second callback"))
     #+end_src
